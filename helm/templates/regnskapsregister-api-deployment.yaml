apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    fdk.service: regnskapsregister-api
  name: regnskapsregister-api
  namespace: {{ required "Missing value NAMESPACE" .Values.NAMESPACE }}
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        fdk.service: regnskapsregister-api
    spec:
      containers:
      - env:
        - name: RRAPI_MONGO_USERNAME
          value: {{ required "Missing value RRAPI_MONGO_USERNAME" .Values.RRAPI_MONGO_USERNAME }}
        - name: RRAPI_MONGO_PASSWORD
          value: {{ required "Missing value RRAPI_MONGO_PASSWORD" .Values.RRAPI_MONGO_PASSWORD }}
        - name: RRAPI_SFTP_SERVER
          value: {{ required "Missing value RREG_RRAPI_SFTP_SERVER" .Values.RREG_RRAPI_SFTP_SERVER | quote}}
        - name: RRAPI_SFTP_USER
          value: {{ required "Missing value RREG_RRAPI_SFTP_USER" .Values.RREG_RRAPI_SFTP_USER | quote}}
        - name: RRAPI_SFTP_PASSWORD
          value: {{ required "Missing value RREG_RRAPI_SFTP_PASSWORD" .Values.RREG_RRAPI_SFTP_PASSWORD | quote}}
        - name: RRAPI_SFTP_PORT
          value: {{ required "Missing value RREG_RRAPI_SFTP_PORT" .Values.RREG_RRAPI_SFTP_PORT | quote}}
        - name: RRAPI_SFTP_DIRECTORY
          value: {{ required "Missing value RREG_RRAPI_SFTP_DIRECTORY" .Values.RREG_RRAPI_SFTP_DIRECTORY | quote}}
        - name: RRAPI_SLACK_TOKEN
          value: {{ required "Missing value RRAPI_SLACK_TOKEN" .Values.RRAPI_SLACK_TOKEN }}
        name: regnskapsregister-api
        image: {{ required "Missing value REGNSKAPSREGISTER_API_IMAGE" .Values.REGNSKAPSREGISTER_API_IMAGE }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: {{ required "Missing value RREG_REGNSKAPSREGISTER_API_MEMORY" .Values.RREG_REGNSKAPSREGISTER_API_MEMORY | quote }}
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
      restartPolicy: Always
status: {}
