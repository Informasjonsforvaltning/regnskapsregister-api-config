# Copyright 2018 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# dynamiske ting
# postgresql-ENV-key
# PROJECT_ID
# REGION (til cloud sql instance)
# DB_NAME (bør ha ENV i seg, pga flere env pr prosjekt/cluster)
# POSTGRESQL_PORT  (bør være 5432)
# kubectl create secret --namespace=ut1 generic postgresql-ut1-key --from-file=key.json=sa.json
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: postgresql-sqlproxy
  name: postgresql-sqlproxy
  namespace: {{ required "Missing value NAMESPACE" .Values.NAMESPACE }}
spec:
  replicas: 1
  selector:
    matchLabels:
      run: postgresql-sqlproxy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: postgresql-sqlproxy
    spec:
      volumes:
        - name: google-cloud-key
          secret:
            defaultMode: 420
            secretName: postgresql-{{ required "Missing value NAMESPACE" .Values.NAMESPACE }}-key
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
      containers:
        - env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/key.json
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs
            - name: google-cloud-key
              mountPath: /var/secrets/google
          command: ["/cloud_sql_proxy",
                    "-instances={{ required "Missing value RREG_SQL_PROXY_CLUSTER" .Values.RREG_SQL_PROXY_CLUSTER }}:europe-north1:rreg-sql11-{{ required "Missing value RREG_SQL_PROXY_SQL_ENVIRONMENT" .Values.RREG_SQL_PROXY_SQL_ENVIRONMENT }}=tcp:0.0.0.0:5432"]
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - netstat -tlnp | grep -i cloud_sql_proxy
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: postgresql-sqlproxy
          ports:
            - containerPort: 5432
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30